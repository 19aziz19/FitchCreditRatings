ifelse(y == "BB-", 13,
ifelse(y == "B+", 14,
ifelse(y == "B", 15,
ifelse(y == "B-", 16,
ifelse(y == "CCC+", 17,
ifelse(y == "CCC", 18,
ifelse(y == "CCC-", 19,
ifelse(y == "CC", 20,
ifelse(y == "C", 21,
NA)))))))))))))))))))))
return(y)
}
#Function to encode whether a bond is investment of non-investment grade (Junk)
EncodeJunkBonds <- function(y) {
y<-ifelse(y == "AAA",0,
ifelse(y == "AA+", 0,
ifelse(y=="AA",0,
ifelse(y=="AA-",0,
ifelse(y=="A+",0,
ifelse(y=="A",0,
ifelse(y=="A-",0,
ifelse(y == "BBB+", 0,
ifelse(y == "BBB", 0,
ifelse(y == "BBB-", 0,
ifelse(y == "BB+", 1,
ifelse(y == "BB", 1,
ifelse(y == "BB-", 1,
ifelse(y == "B+", 1,
ifelse(y == "B", 1,
ifelse(y == "B-", 1,
ifelse(y == "CCC+", 1,
ifelse(y == "CCC", 1,
ifelse(y == "CCC-", 1,
ifelse(y == "CC", 1,
ifelse(y == "C", 1,
NA)))))))))))))))))))))
return(y)
}
#Function to calculate trailing SD of GDPGrowth
CalculateRollingSD <- function(df, i, j) {
s <- as.numeric(df %>% filter(Year <= i & Country == j & Year >= (i-10) ) %>%
summarize(sd = sd(GDPGrowth)))
return(s)
}
# Chunk 3
setwd("./DATA/")
df_Fitch <- read_csv("fitch.csv")
df_WDI_1 <- read_csv("EXPORT_WDI_1.csv")
df_WDI_2 <- read_csv("EXPORT_WDI_2.csv")
df_Default <- read_csv("defaults.csv")
df_WGI <- read_csv("WGI.csv")
df_GovDebt <- read_csv("DebtGDP.csv")
df_BroadMoney <- read_csv("BroadMoney.csv")
df_CPI <- read_csv("cpi.csv")
df_GenGovDeficit <-read_csv("SurplusDeficit.csv")
#df_GenGovDeficit <- read_csv("GeneralGovDeficitGDP.csv")
df_WorldGDP <- read_csv("GDPWorld.csv")
df_GrowthGDP <- read_csv("GDPGrowth.csv")
df_InterestPaymentsRevenue <- read_csv("InterestPaymentsRevenue.csv")
df_ManufacturesExports <- read_csv("ManufacturesExports.csv")
df_MerchandiseExports<- read_csv("MerchandiseExports.csv")
df_TotalReservesMonths <- read_csv("TotalReservesMonths.csv")
df_NetForeignAssets <- read_csv("NetForeignAssets.csv")
df_GDPLCU <- read_csv("GDPLCU.csv")
df_CurrentAccountBalance <- read_csv("CurrentAccountBalance.csv")
df_InterestPayments <- read_csv("InterestPayments.csv")
df_GovGrossDeptGDP <- read_csv("GovGrossDebtGDP.csv")
df_RealInterestRate <- read_csv("RealInterestRate.csv")
df_CountyCodes <- read_csv("Countries.csv")
#Set up variables
v_Country <- df_Fitch %>% select(Country) %>% distinct()
v_GovernanceIndicators <- c("CC.PER.RNK","GE.PER.RNK","RL.PER.RNK","VA.PER.RNK","PV.PER.RNK","RQ.PER.RNK")
v_ReserveCurrency3 <- c("Japan", "USA", "Euro", "Germany")
v_ReserveCurrency3_Post1999 <- c("Austria", "Belgium", "Cyprus", "Estonia", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Portugal", "Slovakia", "Slovenia", "Spain")
v_ReserveCurrency2 <- c("Australia", "Switzerland")
v_ReserveCurrency1 <- c("Sweden", "Canada", "New Zealand", "Denmark")
###################################CountryCodesNames/
df_CountyCodes <- df_CountyCodes %>% rename(Country = `Country Name`)
###################################/CountryCodesNames
###################################World Bank Development Indicators/
df_WDI <- bind_rows(df_WDI_1,df_WDI_2)
rm(df_WDI_1)
rm(df_WDI_2)
df_WDI <- TidyUpWorldBank(df_WDI)
###################################/World Bank Development Indicators
###################################Broadmoney/
df_BroadMoney <- TidyUpWorldBank(df_BroadMoney)
df_BroadMoney <- df_BroadMoney %>%
mutate(BroadMoney = log(FM.LBL.BMNY.GD.ZS)) %>%
select(-FM.LBL.BMNY.GD.ZS)
###################################/Broadmoney
###################################World Bank Governance Indicators/
#
#WGI missing 1994,1995,1997,1999 aand 2001
#Impute averages
df_WGI <- df_WGI %>% mutate(`1994` = `1996`, `1995` = `1996`,
`1997` = (`1996` + `1998`) /2,
`1999` = (`1998` + `2000`) /2,
`2001` = (`2000` + `2002`) /2)
df_WGI <- df_WGI %>%
filter(`Indicator Code` %in% v_GovernanceIndicators)
df_WGI <- TidyUpWorldBank(df_WGI)
df_Governance <- df_WGI %>% mutate(Governance = (CC.PER.RNK + GE.PER.RNK + PV.PER.RNK + RL.PER.RNK + RQ.PER.RNK + VA.PER.RNK) / 6) %>%
select(-CC.PER.RNK, -GE.PER.RNK, -PV.PER.RNK, -RL.PER.RNK,-RQ.PER.RNK, -VA.PER.RNK)
#
###################################/World Bank Governance Indicators
###################################Percentile rank % world gdp & log % share gdp/
#
df_WorldGDP <- df_WorldGDP %>%
mutate(Year = year(as.Date(Year, "%d/%m/%Y"))) %>%
group_by(Year) %>%
mutate(WorldGDPRank = percent_rank(GDPWorld)) %>%
mutate(WorldGDPLog =  log(GDPWorld * 100)) %>%
select(-GDPWorld) %>%
ungroup()
#
###################################/Percentile rank % world gdp & log % share gdp
###################################Defaults/
#
#since 1965. Gather into long format
#
df_Default <- df_Default %>%
gather(Occasion,Default,2:14) %>%
select(-Occasion) %>%
filter(!is.na(Default)) %>%
arrange(Country,Default)
###################################/Defaults
###################################gross general government debt/
df_GovDebt <- df_GovDebt %>%
mutate(Year = year(as.Date(Year, "%d/%m/%Y")))
df_GovDebt <-  df_GovDebt %>%
select(Country, Year, GC.DOD.TOTL.GD.ZS) %>%
filter(!is.na(GC.DOD.TOTL.GD.ZS)) %>%
arrange(Country,Year)   %>%
group_by(Country) %>%
mutate(RollMeanGovDebt =
(lag(GC.DOD.TOTL.GD.ZS)+lag(GC.DOD.TOTL.GD.ZS,2)+ GC.DOD.TOTL.GD.ZS) /3) %>%        mutate(RollMeanGovDebt = ifelse(is.na(RollMeanGovDebt), GC.DOD.TOTL.GD.ZS, RollMeanGovDebt)) %>%
#  select(-GC.DOD.TOTL.GD.ZS) %>%
ungroup()
###################################/gross general government debt
###################################general government (budget) balance (% of GDP)/
#AKA General Government Deficit
#
df_GenGovDeficit <- TidyUpWorldBank(df_GenGovDeficit)
df_GenGovDeficit <- df_GenGovDeficit %>%
filter(!is.na(GC.BAL.CASH.GD.ZS)) %>%
arrange(Country,Year)   %>%
group_by(Country) %>%
mutate(RollGenGovDeficit =
(lag(GC.BAL.CASH.GD.ZS)+lag(GC.BAL.CASH.GD.ZS,2)+ GC.BAL.CASH.GD.ZS) /3) %>%
mutate(RollGenGovDeficit = ifelse(is.na(RollGenGovDeficit), GC.BAL.CASH.GD.ZS, RollGenGovDeficit)) %>%
select(-GC.BAL.CASH.GD.ZS) %>%
ungroup()
###################################/general government (budget) balance (% of GDP)
#Three-year centred average of public foreign currency denominated (and indexed) debt (% of #general government debt).  ---DATA NOT AVAILABLE :(
##################################Interest Payments on Revenue/
df_InterestPaymentsRevenue <- TidyUpWorldBank(df_InterestPaymentsRevenue)
df_InterestPaymentsRevenue <- df_InterestPaymentsRevenue %>%
filter(!is.na(GC.XPN.INTP.RV.ZS)) %>%
arrange(Country,Year)   %>%
group_by(Country) %>%
mutate(RollInterestPaymentsRevenue =
(lag(GC.XPN.INTP.RV.ZS)+lag(GC.XPN.INTP.RV.ZS,2)+ GC.XPN.INTP.RV.ZS) /3) %>%
mutate(RollInterestPaymentsRevenue = ifelse(is.na(RollInterestPaymentsRevenue), GC.XPN.INTP.RV.ZS, RollInterestPaymentsRevenue)) %>%
select(-GC.XPN.INTP.RV.ZS) %>%
ungroup()
###################################/Interest Payments on Revenue
###################################NonManufacturedMerchandiseExports/
df_MerchandiseExports <- TidyUpWorldBank(df_MerchandiseExports)
df_ManufacturesExports <- TidyUpWorldBank(df_ManufacturesExports)
#df_CXR3 <- df_WDI %>%
#  select(Country, Year, BX.GSR.GNFS.CD)  %>%
#  filter(!is.na(BX.GSR.GNFS.CD))
df_CXR2 <- read_csv("CurrentAccountReceipts.csv")
df_CXR2 <- TidyUpWorldBank(df_CXR2)
df_CXR2 <- df_CXR2 %>%
select(Country, Year, BX.GSR.FCTY.CD)  %>%
filter(!is.na(BX.GSR.FCTY.CD))
df_CXR <- df_CXR2
df_NonManMercExports <- df_MerchandiseExports %>% left_join(df_ManufacturesExports) %>%
mutate(NonManMercExports = (1-TX.VAL.MANF.ZS.UN/100) * TX.VAL.MRCH.CD.WT) %>%
select(-TX.VAL.MRCH.CD.WT, -TX.VAL.MANF.ZS.UN) %>%
left_join(df_CXR) %>%
filter(!is.na(NonManMercExports)  & !is.na(BX.GSR.FCTY.CD) ) %>%
mutate(NonManMercExports = NonManMercExports / BX.GSR.FCTY.CD) %>%
select(-BX.GSR.FCTY.CD) %>%
arrange(Year)
###################################/NonManufacturedExports
###################################TotalReserves/
df_TotalReservesMonths <- TidyUpWorldBank(df_TotalReservesMonths)
###################################/TotalReserves
###################################NetForeignAssets/
df_NetForeignAssets <- TidyUpWorldBank(df_NetForeignAssets)
df_GDPLCU <- TidyUpWorldBank(df_GDPLCU)
df_NetForeignAssets <- df_GDPLCU %>%
right_join(df_NetForeignAssets) %>%
filter(!is.na(NY.GDP.MKTP.KN) & !is.na(FM.AST.NFRG.CN) ) %>%
mutate(NetForeignAssetsGDP = FM.AST.NFRG.CN / NY.GDP.MKTP.KN) %>%
select(-NY.GDP.MKTP.KN, -FM.AST.NFRG.CN) %>%
arrange(Country,Year)   %>%
group_by(Country) %>%
mutate(RollNetForeignAssetsGDP =
(lag(NetForeignAssetsGDP)+lag(NetForeignAssetsGDP,2)+ NetForeignAssetsGDP) /3) %>%
mutate(RollNetForeignAssetsGDP = ifelse(is.na(RollNetForeignAssetsGDP), NetForeignAssetsGDP, RollNetForeignAssetsGDP)) %>%
select(-NetForeignAssetsGDP) %>%
ungroup()
###################################/NetForeignAssets
###################################Current Account Balance and FDI over GDP/
df_CurrentAccountBalance <- TidyUpWorldBank(df_CurrentAccountBalance)
df_CurrentAccountBalance <- df_WDI %>%
select(Country, Year, BX.KLT.DINV.CD.WD ) %>%
right_join(df_CurrentAccountBalance) %>%
right_join(select(df_WDI, Country, Year, NY.GDP.MKTP.CD)) %>%
filter(!is.na(BN.CAB.XOKA.CD) & !is.na(BX.KLT.DINV.CD.WD) & !is.na(NY.GDP.MKTP.CD)) %>%
mutate(CABFDI = (BX.KLT.DINV.CD.WD + BN.CAB.XOKA.CD )/NY.GDP.MKTP.CD) %>%
select(-NY.GDP.MKTP.CD, -BN.CAB.XOKA.CD, -BX.KLT.DINV.CD.WD) %>%
arrange(Country, Year) %>%
group_by(Country) %>%
mutate(RollCABFDI =
(lag(CABFDI)+lag(CABFDI,2)+ CABFDI) /3) %>%
mutate(RollCABFDI = ifelse(is.na(RollCABFDI), CABFDI, RollCABFDI)) %>%
select(-CABFDI) %>%
ungroup()
#####################################/Current Account Balance and FDI over GDP
#####################################Interest Payments/
df_InterestPayments <- TidyUpWorldBank(df_InterestPayments)
df_InterestPayments <- df_InterestPayments %>%
left_join(df_CXR) %>%
mutate(InterestPayments = DT.INT.DECT.CD / BX.GSR.FCTY.CD) %>%
select(-DT.INT.DECT.CD, -BX.GSR.FCTY.CD) %>%
arrange(Country, Year) %>%
filter(!is.na(InterestPayments)) %>%
group_by(Country) %>%
mutate(RollInterestPayments =
(lag(InterestPayments)+lag(InterestPayments,2)+ InterestPayments) /3) %>%
mutate(RollInterestPayments = ifelse(is.na(RollInterestPayments ), InterestPayments, RollInterestPayments )) %>%
select(-InterestPayments) %>%
ungroup()
#####################################/Interest Payments
#####################################Real GDP Growth/
df_GrowthGDP <- df_GrowthGDP %>%
mutate(Year = year(as.Date(Year, "%d/%m/%Y")))
#####################################/Real GDP Growth
#####################################Real Interest Rates/
df_RealInterestRate <- df_RealInterestRate %>%
mutate(Year = year(as.Date(Year, "%d/%m/%Y")))
#####################################/Real Interest Rates
#STD DEV REAL GDP
#####################################CPI/
#v_CPI <- as.character(seq(1990, 2012, 1))
#df_CPI <- bind_cols(df_CPI[,1:4],df_CPI[,v_CPI])
#df_CPI <- df_CPI %>%
#  filter(`Indicator Code` == "PCPI_PC_CP_A_PT")
#df_CPI <- TidyUpWorldBank(df_CPI)
df_CPI <- df_CPI %>%
mutate(Year = year(as.Date(Year, "%d/%m/%Y")))
df_CPI <- df_CPI %>% arrange(Country,Year)   %>%
arrange(Country,Year) %>%
group_by(Country) %>%
mutate(ChangeCPI = CPI - lag(CPI) ) %>%
mutate(ChangeCPI = ifelse(is.na(CPI), 0, CPI)) %>%
mutate(RollMeanChangeCPI =
(lag(ChangeCPI)+lag(ChangeCPI,2) + ChangeCPI) /3) %>%
mutate(RollMeanChangeCPI = ifelse(is.na(RollMeanChangeCPI), ChangeCPI, RollMeanChangeCPI)) %>%
select(-CPI, -ChangeCPI) %>%
ungroup()
#####################################/CPI
#Time to join explanatory variables
df_Fitch <- df_Fitch %>%
mutate(Year = year(as.Date(Date, "%d/%m/%Y")))
df_Fitch <- df_Fitch %>%
left_join(df_GovDebt)
df_Fitch <- df_Fitch %>%
left_join(df_Governance)
df_Fitch <- df_Fitch %>%
left_join(df_BroadMoney)
df_Fitch <- df_Fitch %>%
left_join(df_GenGovDeficit)
df_Fitch <- df_Fitch %>%
left_join(df_InterestPayments)
df_Fitch <- df_Fitch %>%
left_join(df_CPI)
df_Fitch <- df_Fitch %>%
left_join(df_WorldGDP)
#df_Fitch <- df_Fitch %>%
#  left_join(df_GovDeptRoll)
df_Fitch <- df_Fitch %>%
left_join(df_NonManMercExports)
df_Fitch <- df_Fitch %>%
left_join(df_NetForeignAssets)
df_Fitch <- df_Fitch %>%
left_join(df_CurrentAccountBalance)
df_Fitch <- df_Fitch %>%
left_join(df_TotalReservesMonths)
df_Fitch <- df_Fitch %>%
left_join(df_InterestPaymentsRevenue)
df_Fitch <- df_Fitch %>%
left_join(df_GrowthGDP)
df_Fitch <- df_Fitch %>%
left_join(df_RealInterestRate)
df_Fitch$SDGDP <- NA
for (counter in 1:dim(df_Fitch)[1]){
i = as.integer(df_Fitch[counter, "Year"])
j = as.character(df_Fitch[counter, "Country"])
df_Fitch[counter, "SDGDP"] <- CalculateRollingSD(df_GrowthGDP, i, j)
}
df_Fitch$Default <- NA
for (counter in 1:dim(df_Fitch)[1]){
i = as.integer(df_Fitch[counter, "Year"])
j = as.character(df_Fitch[counter, "Country"])
df_Fitch[counter, "Default"] <- WhenDidYouDefault(df_Default, i, j)
}
df_Fitch <- df_Fitch %>%
mutate(Defaulted = ifelse(Default > 0, 1, 0))
df_Fitch <- df_Fitch %>%
mutate(ReserveCurrrency = 0) %>%
mutate(ReserveCurrrency = ifelse(Country %in% v_ReserveCurrency3, 3,
ifelse(Country %in% v_ReserveCurrency3_Post1999 & Year > 1999, 3,
ifelse(Country %in% v_ReserveCurrency2, 2,
ifelse(Country %in% v_ReserveCurrency1, 1, 0) ))))
df_Fitch <- df_Fitch %>%
rename(ReservesMonthsImports = FI.RES.TOTL.MO, GovDeptGDP = GC.DOD.TOTL.GD.ZS)
df_Fitch_Summary <- summary(df_Fitch)
#Too many blanks
df_Fitch <- df_Fitch %>%
select(-RollInterestPayments)
#df_Fitch %>%
#  select(-DT.INT.DECT.CD ) %>% na.omit() %>% summary()
#df_Fitch %>%
#  select(-DT.INT.DECT.CD, -NonManMercExports) %>% summary()
df_Fitch <- df_Fitch %>%
mutate(locallongterm_letter = gsub("\\+","",locallongterm)) %>%
mutate(locallongterm_letter = gsub("-","",locallongterm_letter))
df_Fitch %>% group_by(Country) %>% summarise(n())
write_csv(df_Fitch, "df_Fitch.csv")
df_Fitch <- df_Fitch %>%
filter(locallongterm != "-" & locallongterm != "i" & locallongterm != "withdrawn" & locallongterm != "RD" & locallongterm != "DDD")
df_FitchReduced <-df_Fitch %>% na.omit()
# select(-DT.INT.DECT.CD ) %>% %>%
#mutate(locallongterm_letter = gsub("\\+","",locallongterm)) %>%
#mutate(locallongterm_letter = gsub("-","",locallongterm_letter))
df_FitchReduced_Summary <- summary(df_FitchReduced)
strFitchReduced <- str(df_FitchReduced)
# Chunk 4
df_Fitch_Summary %>% kable()
df_FitchReduced_Summary %>% kable()
``
Visalise this
```{r echo=FALSE, message=FALSE, warning=FALSE}
CreditRatings <- c("AAA",
"AA+", "AA",
"A+","A","A-",
"BBB+","BBB","BBB-",
"BB+","BB","BB-",
"B+","B","B-",
"CCC+","CCC","CCC-",
"CC","C","DDD",
"RD") #withdrawn i  -
CreditRatingsLetter <- c("AAA",
"AA",
"A",
"BBB",
"BB",
"B",
"CCC",
"CC","C","DDD",
"RD")
df_Fitch %>%
ggplot( aes(x = locallongterm)) +
geom_bar(col="red",
fill="green",
alpha = .2) +
labs(title="Sovereign Credit Ratings") +
labs(x="Rating", y="Count") +
scale_x_discrete(limits=CreditRatings) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_Fitch %>%
ggplot( aes(x = locallongterm_letter)) +
geom_bar(col="red",
fill="green",
alpha = .2) +
labs(title="Sovereign Credit Ratings") +
labs(x="Rating", y="Count") +
scale_x_discrete(limits=CreditRatingsLetter) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
prop.table(table(df_Fitch$locallongterm))
prop.table(table(df_Fitch$locallongterm_letter))
df_FitchReduced %>%
ggplot( aes(x = locallongterm)) +
geom_bar(col="red",
fill="green",
alpha = .2) +
labs(title="Sovereign Credit Ratings - Removed Missingness") +
labs(x="Rating", y="Count") +
scale_x_discrete(limits=CreditRatings) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_FitchReduced %>%
ggplot( aes(x = locallongterm_letter)) +
geom_bar(col="red",
fill="green",
alpha = .2) +
labs(title="Sovereign Credit Ratings - Removed Missingness") +
labs(x="Rating", y="Count") +
scale_x_discrete(limits=CreditRatingsLetter) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
prop.table(table(df_FitchReduced$locallongterm))
prop.table(table(df_FitchReduced$locallongterm_letter))
###Create Country Map with Average Credit Rating
z <- df_Fitch %>%
select(Country, locallongterm ) %>%
mutate(Credit = EncodeRating(locallongterm)) %>%
left_join(df_CountyCodes)
map_z <- z %>%
group_by(`Country Code`) %>%
summarize('Average Credit Rating'=mean(Credit)) %>%
joinCountryData2Map( joinCode = "ISO3" ,nameJoinColumn = "Country Code")
mapParams <- mapCountryData(map_z ,nameColumnToPlot='Average Credit Rating', addLegend=FALSE )
do.call( addMapLegend, c(mapParams, legendWidth=0.5, legendMar = 2))
###Create Country Map with Average Junk Status
z <- z %>%
mutate(Junk = EncodeJunkBonds(locallongterm))
map_z <- z %>%
group_by(`Country Code`) %>%
summarize('Junk Bond Status'=mean(Junk)) %>%
joinCountryData2Map( joinCode = "ISO3" ,nameJoinColumn = "Country Code")
mapParams <- mapCountryData(map_z ,nameColumnToPlot='Junk Bond Status', addLegend=FALSE )
do.call( addMapLegend, c(mapParams, legendWidth=0.5, legendMar = 2))
df_FitchReduced_Summary %>% kable()
``
Visalise this
```{r echo=FALSE, message=FALSE, warning=FALSE}
CreditRatings <- c("AAA",
"AA+", "AA",
"A+","A","A-",
"BBB+","BBB","BBB-",
"BB+","BB","BB-",
"B+","B","B-",
"CCC+","CCC","CCC-",
"CC","C","DDD",
"RD") #withdrawn i  -
CreditRatingsLetter <- c("AAA",
"AA",
"A",
"BBB",
"BB",
"B",
"CCC",
"CC","C","DDD",
"RD")
df_Fitch %>%
ggplot( aes(x = locallongterm)) +
geom_bar(col="red",
fill="green",
alpha = .2) +
labs(title="Sovereign Credit Ratings") +
labs(x="Rating", y="Count") +
scale_x_discrete(limits=CreditRatings) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_Fitch %>%
ggplot( aes(x = locallongterm_letter)) +
geom_bar(col="red",
fill="green",
alpha = .2) +
labs(title="Sovereign Credit Ratings") +
labs(x="Rating", y="Count") +
scale_x_discrete(limits=CreditRatingsLetter) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
prop.table(table(df_Fitch$locallongterm))
prop.table(table(df_Fitch$locallongterm_letter))
df_FitchReduced %>%
ggplot( aes(x = locallongterm)) +
geom_bar(col="red",
fill="green",
alpha = .2) +
labs(title="Sovereign Credit Ratings - Removed Missingness") +
labs(x="Rating", y="Count") +
scale_x_discrete(limits=CreditRatings) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_FitchReduced %>%
ggplot( aes(x = locallongterm_letter)) +
geom_bar(col="red",
fill="green",
alpha = .2) +
labs(title="Sovereign Credit Ratings - Removed Missingness") +
labs(x="Rating", y="Count") +
scale_x_discrete(limits=CreditRatingsLetter) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
prop.table(table(df_FitchReduced$locallongterm))
prop.table(table(df_FitchReduced$locallongterm_letter))
###Create Country Map with Average Credit Rating
z <- df_Fitch %>%
select(Country, locallongterm ) %>%
mutate(Credit = EncodeRating(locallongterm)) %>%
left_join(df_CountyCodes)
map_z <- z %>%
group_by(`Country Code`) %>%
summarize('Average Credit Rating'=mean(Credit)) %>%
joinCountryData2Map( joinCode = "ISO3" ,nameJoinColumn = "Country Code")
mapParams <- mapCountryData(map_z ,nameColumnToPlot='Average Credit Rating', addLegend=FALSE )
do.call( addMapLegend, c(mapParams, legendWidth=0.5, legendMar = 2))
###Create Country Map with Average Junk Status
z <- z %>%
mutate(Junk = EncodeJunkBonds(locallongterm))
map_z <- z %>%
group_by(`Country Code`) %>%
summarize('Junk Bond Status'=mean(Junk)) %>%
joinCountryData2Map( joinCode = "ISO3" ,nameJoinColumn = "Country Code")
mapParams <- mapCountryData(map_z ,nameColumnToPlot='Junk Bond Status', addLegend=FALSE )
do.call( addMapLegend, c(mapParams, legendWidth=0.5, legendMar = 2))
df_FitchReduced_Summary
prop.table(signif(table(df_Fitch$locallongterm_letter)),4)
?prop.table
